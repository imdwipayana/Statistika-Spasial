{"cells":[{"cell_type":"code","execution_count":47,"metadata":{"executionInfo":{"elapsed":402,"status":"ok","timestamp":1687046260025,"user":{"displayName":"Anggy Swary","userId":"00218416286107057042"},"user_tz":-480},"id":"XGFKX6Z_qK-K"},"outputs":[],"source":["# Install semua library yang dibutuhkan: numpy, matplotlib, pandas, mgwr, geopandas dan libpysal\n","# Gunakan perintah: pip install libpysal (sebagai contoh)\n","import numpy as np\n","import libpysal as ps\n","import matplotlib.pyplot as plt\n","import matplotlib as mpl\n","import pandas as pd\n","import geopandas as gp\n","import os\n","\n","from mgwr.gwr import GWR, MGWR\n","from mgwr.sel_bw import Sel_BW"]},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3791,"status":"ok","timestamp":1687039370043,"user":{"displayName":"Anggy Swary","userId":"00218416286107057042"},"user_tz":-480},"id":"iX2a0DEOBwGw","outputId":"a3a9daf6-7638-4a1b-ab55-36a7a833505e"},"outputs":[{"name":"stdout","output_type":"stream","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (1.22.4)\n"]}],"source":["pip install numpy"]},{"cell_type":"code","execution_count":42,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3806,"status":"ok","timestamp":1687040938062,"user":{"displayName":"Anggy Swary","userId":"00218416286107057042"},"user_tz":-480},"id":"CuRaSrMqBdtt"},"outputs":[{"name":"stdout","output_type":"stream","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting libpysal\n","  Downloading libpysal-4.7.0-py3-none-any.whl (2.4 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.4/2.4 MB\u001b[0m \u001b[31m25.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: platformdirs in /usr/local/lib/python3.10/dist-packages (from libpysal) (3.3.0)\n","Requirement already satisfied: beautifulsoup4 in /usr/local/lib/python3.10/dist-packages (from libpysal) (4.11.2)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from libpysal) (3.1.2)\n","Requirement already satisfied: numpy\u003e=1.3 in /usr/local/lib/python3.10/dist-packages (from libpysal) (1.22.4)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (from libpysal) (1.5.3)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from libpysal) (2.27.1)\n","Requirement already satisfied: scipy\u003e=0.11 in /usr/local/lib/python3.10/dist-packages (from libpysal) (1.10.1)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from libpysal) (23.1)\n","Requirement already satisfied: soupsieve\u003e1.2 in /usr/local/lib/python3.10/dist-packages (from beautifulsoup4-\u003elibpysal) (2.4.1)\n","Requirement already satisfied: MarkupSafe\u003e=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2-\u003elibpysal) (2.1.2)\n","Requirement already satisfied: python-dateutil\u003e=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas-\u003elibpysal) (2.8.2)\n","Requirement already satisfied: pytz\u003e=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas-\u003elibpysal) (2022.7.1)\n","Requirement already satisfied: urllib3\u003c1.27,\u003e=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests-\u003elibpysal) (1.26.15)\n","Requirement already satisfied: certifi\u003e=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests-\u003elibpysal) (2022.12.7)\n","Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.10/dist-packages (from requests-\u003elibpysal) (2.0.12)\n","Requirement already satisfied: idna\u003c4,\u003e=2.5 in /usr/local/lib/python3.10/dist-packages (from requests-\u003elibpysal) (3.4)\n","Requirement already satisfied: six\u003e=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil\u003e=2.8.1-\u003epandas-\u003elibpysal) (1.16.0)\n","Installing collected packages: libpysal\n","Successfully installed libpysal-4.7.0\n"]}],"source":["pip install libpysal"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3236,"status":"ok","timestamp":1687039409410,"user":{"displayName":"Anggy Swary","userId":"00218416286107057042"},"user_tz":-480},"id":"g8pi6fG-B-Nl","outputId":"31bc106f-c54e-41da-8ec5-fe695eb98286"},"outputs":[{"name":"stdout","output_type":"stream","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (3.7.1)\n","Requirement already satisfied: contourpy\u003e=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (1.0.7)\n","Requirement already satisfied: cycler\u003e=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (0.11.0)\n","Requirement already satisfied: fonttools\u003e=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (4.39.3)\n","Requirement already satisfied: kiwisolver\u003e=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (1.4.4)\n","Requirement already satisfied: numpy\u003e=1.20 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (1.22.4)\n","Requirement already satisfied: packaging\u003e=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (23.1)\n","Requirement already satisfied: pillow\u003e=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (8.4.0)\n","Requirement already satisfied: pyparsing\u003e=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (3.0.9)\n","Requirement already satisfied: python-dateutil\u003e=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (2.8.2)\n","Requirement already satisfied: six\u003e=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil\u003e=2.7-\u003ematplotlib) (1.16.0)\n"]}],"source":["pip install matplotlib"]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5564,"status":"ok","timestamp":1687039422590,"user":{"displayName":"Anggy Swary","userId":"00218416286107057042"},"user_tz":-480},"id":"QCA1HCntCPn2","outputId":"e84ddbf6-3d86-4252-8c73-f16b729475a6"},"outputs":[{"name":"stdout","output_type":"stream","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (1.5.3)\n","Requirement already satisfied: python-dateutil\u003e=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2.8.2)\n","Requirement already satisfied: pytz\u003e=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2022.7.1)\n","Requirement already satisfied: numpy\u003e=1.21.0 in /usr/local/lib/python3.10/dist-packages (from pandas) (1.22.4)\n","Requirement already satisfied: six\u003e=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil\u003e=2.8.1-\u003epandas) (1.16.0)\n"]}],"source":["pip install pandas"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8496,"status":"ok","timestamp":1687039434260,"user":{"displayName":"Anggy Swary","userId":"00218416286107057042"},"user_tz":-480},"id":"q0WhzMSlCo_N","outputId":"25aad4f4-f90d-44d0-a7f3-4a8e39ab3c00"},"outputs":[{"name":"stdout","output_type":"stream","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting geopandas\n","  Downloading geopandas-0.13.2-py3-none-any.whl (1.1 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.1/1.1 MB\u001b[0m \u001b[31m23.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting fiona\u003e=1.8.19 (from geopandas)\n","  Downloading Fiona-1.9.4.post1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (16.4 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m16.4/16.4 MB\u001b[0m \u001b[31m84.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from geopandas) (23.1)\n","Requirement already satisfied: pandas\u003e=1.1.0 in /usr/local/lib/python3.10/dist-packages (from geopandas) (1.5.3)\n","Collecting pyproj\u003e=3.0.1 (from geopandas)\n","  Downloading pyproj-3.6.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (7.9 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m7.9/7.9 MB\u001b[0m \u001b[31m117.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: shapely\u003e=1.7.1 in /usr/local/lib/python3.10/dist-packages (from geopandas) (2.0.1)\n","Requirement already satisfied: attrs\u003e=19.2.0 in /usr/local/lib/python3.10/dist-packages (from fiona\u003e=1.8.19-\u003egeopandas) (23.1.0)\n","Requirement already satisfied: certifi in /usr/local/lib/python3.10/dist-packages (from fiona\u003e=1.8.19-\u003egeopandas) (2022.12.7)\n","Requirement already satisfied: click~=8.0 in /usr/local/lib/python3.10/dist-packages (from fiona\u003e=1.8.19-\u003egeopandas) (8.1.3)\n","Collecting click-plugins\u003e=1.0 (from fiona\u003e=1.8.19-\u003egeopandas)\n","  Downloading click_plugins-1.1.1-py2.py3-none-any.whl (7.5 kB)\n","Collecting cligj\u003e=0.5 (from fiona\u003e=1.8.19-\u003egeopandas)\n","  Downloading cligj-0.7.2-py3-none-any.whl (7.1 kB)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from fiona\u003e=1.8.19-\u003egeopandas) (1.16.0)\n","Requirement already satisfied: python-dateutil\u003e=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas\u003e=1.1.0-\u003egeopandas) (2.8.2)\n","Requirement already satisfied: pytz\u003e=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas\u003e=1.1.0-\u003egeopandas) (2022.7.1)\n","Requirement already satisfied: numpy\u003e=1.21.0 in /usr/local/lib/python3.10/dist-packages (from pandas\u003e=1.1.0-\u003egeopandas) (1.22.4)\n","Installing collected packages: pyproj, cligj, click-plugins, fiona, geopandas\n","Successfully installed click-plugins-1.1.1 cligj-0.7.2 fiona-1.9.4.post1 geopandas-0.13.2 pyproj-3.6.0\n"]}],"source":["pip install geopandas"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1405,"status":"ok","timestamp":1687039441507,"user":{"displayName":"Anggy Swary","userId":"00218416286107057042"},"user_tz":-480},"id":"NoE7QH3ICzyu","outputId":"84f3d077-6987-441f-eaca-79a890a5cb71"},"outputs":[{"name":"stdout","output_type":"stream","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","\u001b[31mERROR: Could not find a version that satisfies the requirement os (from versions: none)\u001b[0m\u001b[31m\n","\u001b[0m\u001b[31mERROR: No matching distribution found for os\u001b[0m\u001b[31m\n","\u001b[0m"]}],"source":["pip install os"]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8366,"status":"ok","timestamp":1687039457227,"user":{"displayName":"Anggy Swary","userId":"00218416286107057042"},"user_tz":-480},"id":"XIJM9K0tDemi","outputId":"8c93705d-5bbe-4d3c-e129-6eb164de170b"},"outputs":[{"name":"stdout","output_type":"stream","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting mgwr\n","  Downloading mgwr-2.1.2.tar.gz (41 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m41.8/41.8 kB\u001b[0m \u001b[31m3.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: scipy\u003e=0.11 in /usr/local/lib/python3.10/dist-packages (from mgwr) (1.10.1)\n","Requirement already satisfied: numpy\u003e=1.3 in /usr/local/lib/python3.10/dist-packages (from mgwr) (1.22.4)\n","Collecting libpysal\u003e=4.0.0 (from mgwr)\n","  Downloading libpysal-4.7.0-py3-none-any.whl (2.4 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.4/2.4 MB\u001b[0m \u001b[31m33.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting spglm\u003e=1.0.6 (from mgwr)\n","  Downloading spglm-1.0.8.tar.gz (37 kB)\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Collecting spreg (from mgwr)\n","  Downloading spreg-1.3.2-py3-none-any.whl (220 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m220.2/220.2 kB\u001b[0m \u001b[31m22.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: platformdirs in /usr/local/lib/python3.10/dist-packages (from libpysal\u003e=4.0.0-\u003emgwr) (3.3.0)\n","Requirement already satisfied: beautifulsoup4 in /usr/local/lib/python3.10/dist-packages (from libpysal\u003e=4.0.0-\u003emgwr) (4.11.2)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from libpysal\u003e=4.0.0-\u003emgwr) (3.1.2)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (from libpysal\u003e=4.0.0-\u003emgwr) (1.5.3)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from libpysal\u003e=4.0.0-\u003emgwr) (2.27.1)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from libpysal\u003e=4.0.0-\u003emgwr) (23.1)\n","Requirement already satisfied: scikit-learn\u003e=0.22 in /usr/local/lib/python3.10/dist-packages (from spreg-\u003emgwr) (1.2.2)\n","Requirement already satisfied: joblib\u003e=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-learn\u003e=0.22-\u003espreg-\u003emgwr) (1.2.0)\n","Requirement already satisfied: threadpoolctl\u003e=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn\u003e=0.22-\u003espreg-\u003emgwr) (3.1.0)\n","Requirement already satisfied: soupsieve\u003e1.2 in /usr/local/lib/python3.10/dist-packages (from beautifulsoup4-\u003elibpysal\u003e=4.0.0-\u003emgwr) (2.4.1)\n","Requirement already satisfied: MarkupSafe\u003e=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2-\u003elibpysal\u003e=4.0.0-\u003emgwr) (2.1.2)\n","Requirement already satisfied: python-dateutil\u003e=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas-\u003elibpysal\u003e=4.0.0-\u003emgwr) (2.8.2)\n","Requirement already satisfied: pytz\u003e=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas-\u003elibpysal\u003e=4.0.0-\u003emgwr) (2022.7.1)\n","Requirement already satisfied: urllib3\u003c1.27,\u003e=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests-\u003elibpysal\u003e=4.0.0-\u003emgwr) (1.26.15)\n","Requirement already satisfied: certifi\u003e=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests-\u003elibpysal\u003e=4.0.0-\u003emgwr) (2022.12.7)\n","Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.10/dist-packages (from requests-\u003elibpysal\u003e=4.0.0-\u003emgwr) (2.0.12)\n","Requirement already satisfied: idna\u003c4,\u003e=2.5 in /usr/local/lib/python3.10/dist-packages (from requests-\u003elibpysal\u003e=4.0.0-\u003emgwr) (3.4)\n","Requirement already satisfied: six\u003e=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil\u003e=2.8.1-\u003epandas-\u003elibpysal\u003e=4.0.0-\u003emgwr) (1.16.0)\n","Building wheels for collected packages: mgwr, spglm\n","  Building wheel for mgwr (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for mgwr: filename=mgwr-2.1.2-py3-none-any.whl size=46365 sha256=9b26dea252150eb4425df4e0bd3ff25d7463ba4abc0672b465d48e5937fb8c75\n","  Stored in directory: /root/.cache/pip/wheels/4d/43/6e/bd2d0e1ccee77089e0b266ebc4948d9a90ef363e0be23663aa\n","  Building wheel for spglm (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for spglm: filename=spglm-1.0.8-py3-none-any.whl size=38785 sha256=0d0426b85e38828ec956dfa2fd87890e272c3982bf370ee2863bad1bb2f2ae57\n","  Stored in directory: /root/.cache/pip/wheels/a2/a7/67/07d6d6809173d768c16235f813520d6a4053984a160aa933fa\n","Successfully built mgwr spglm\n","Installing collected packages: libpysal, spreg, spglm, mgwr\n","Successfully installed libpysal-4.7.0 mgwr-2.1.2 spglm-1.0.8 spreg-1.3.2\n"]}],"source":["pip install mgwr"]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":19635,"status":"ok","timestamp":1687039486532,"user":{"displayName":"Anggy Swary","userId":"00218416286107057042"},"user_tz":-480},"id":"KbnRa6kXDpb0","outputId":"da4a3bab-8a8a-41bf-e848-89a81b5a296d"},"outputs":[{"name":"stdout","output_type":"stream","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting gwr\n","  Downloading gwr-1.0.1.tar.gz (14 kB)\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from gwr) (1.22.4)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.10/dist-packages (from gwr) (1.10.1)\n","Requirement already satisfied: libpysal in /usr/local/lib/python3.10/dist-packages (from gwr) (4.7.0)\n","Collecting pysal (from gwr)\n","  Downloading pysal-23.1-py3-none-any.whl (17 kB)\n","Requirement already satisfied: spglm in /usr/local/lib/python3.10/dist-packages (from gwr) (1.0.8)\n","Requirement already satisfied: platformdirs in /usr/local/lib/python3.10/dist-packages (from libpysal-\u003egwr) (3.3.0)\n","Requirement already satisfied: beautifulsoup4 in /usr/local/lib/python3.10/dist-packages (from libpysal-\u003egwr) (4.11.2)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from libpysal-\u003egwr) (3.1.2)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (from libpysal-\u003egwr) (1.5.3)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from libpysal-\u003egwr) (2.27.1)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from libpysal-\u003egwr) (23.1)\n","Collecting access\u003e=1.1.8 (from pysal-\u003egwr)\n","  Downloading access-1.1.9-py3-none-any.whl (21 kB)\n","Collecting esda\u003e=2.4.1 (from pysal-\u003egwr)\n","  Downloading esda-2.4.3.tar.gz (116 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m116.6/116.6 kB\u001b[0m \u001b[31m14.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Collecting giddy\u003e=2.3.3 (from pysal-\u003egwr)\n","  Downloading giddy-2.3.4-py3-none-any.whl (61 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m61.1/61.1 kB\u001b[0m \u001b[31m7.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting inequality\u003e=1.0.0 (from pysal-\u003egwr)\n","  Downloading inequality-1.0.0.tar.gz (11 kB)\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Collecting pointpats\u003e=2.2.0 (from pysal-\u003egwr)\n","  Downloading pointpats-2.3.0-py3-none-any.whl (59 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m59.2/59.2 kB\u001b[0m \u001b[31m7.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting segregation\u003e=2.3.1 (from pysal-\u003egwr)\n","  Downloading segregation-2.4.2-py3-none-any.whl (147 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m147.5/147.5 kB\u001b[0m \u001b[31m17.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting spaghetti\u003e=1.7.2 (from pysal-\u003egwr)\n","  Downloading spaghetti-1.7.3-py3-none-any.whl (50 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m50.1/50.1 kB\u001b[0m \u001b[31m6.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: mgwr\u003e=2.1.2 in /usr/local/lib/python3.10/dist-packages (from pysal-\u003egwr) (2.1.2)\n","Collecting momepy\u003e=0.5.4 (from pysal-\u003egwr)\n","  Downloading momepy-0.6.0-py3-none-any.whl (275 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m275.7/275.7 kB\u001b[0m \u001b[31m29.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting spint\u003e=1.0.7 (from pysal-\u003egwr)\n","  Downloading spint-1.0.7.tar.gz (28 kB)\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: spreg\u003e=1.3.0 in /usr/local/lib/python3.10/dist-packages (from pysal-\u003egwr) (1.3.2)\n","Collecting spvcm\u003e=0.3.0 (from pysal-\u003egwr)\n","  Downloading spvcm-0.3.0.tar.gz (5.7 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m5.7/5.7 MB\u001b[0m \u001b[31m101.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Collecting tobler\u003e=0.8.2 (from pysal-\u003egwr)\n","  Downloading tobler-0.10-py3-none-any.whl (30 kB)\n","Collecting mapclassify\u003e=2.5.0 (from pysal-\u003egwr)\n","  Downloading mapclassify-2.5.0-py3-none-any.whl (39 kB)\n","Collecting splot\u003e=1.1.5.post1 (from pysal-\u003egwr)\n","  Downloading splot-1.1.5.post1-py3-none-any.whl (39 kB)\n","Collecting spopt\u003e=0.5.0 (from pysal-\u003egwr)\n","  Downloading spopt-0.5.0-py3-none-any.whl (112 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m112.9/112.9 kB\u001b[0m \u001b[31m15.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: geopandas in /usr/local/lib/python3.10/dist-packages (from access\u003e=1.1.8-\u003epysal-\u003egwr) (0.13.2)\n","Requirement already satisfied: scikit-learn in /usr/local/lib/python3.10/dist-packages (from esda\u003e=2.4.1-\u003epysal-\u003egwr) (1.2.2)\n","Collecting quantecon\u003e=0.4.7 (from giddy\u003e=2.3.3-\u003epysal-\u003egwr)\n","  Downloading quantecon-0.7.1-py3-none-any.whl (214 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m214.8/214.8 kB\u001b[0m \u001b[31m27.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from mapclassify\u003e=2.5.0-\u003epysal-\u003egwr) (3.1)\n","Requirement already satisfied: shapely\u003e=2 in /usr/local/lib/python3.10/dist-packages (from momepy\u003e=0.5.4-\u003epysal-\u003egwr) (2.0.1)\n","Requirement already satisfied: tqdm\u003e=4.27.0 in /usr/local/lib/python3.10/dist-packages (from momepy\u003e=0.5.4-\u003epysal-\u003egwr) (4.65.0)\n","Requirement already satisfied: python-dateutil\u003e=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas-\u003elibpysal-\u003egwr) (2.8.2)\n","Requirement already satisfied: pytz\u003e=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas-\u003elibpysal-\u003egwr) (2022.7.1)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from pointpats\u003e=2.2.0-\u003epysal-\u003egwr) (3.7.1)\n","Requirement already satisfied: urllib3\u003c1.27,\u003e=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests-\u003elibpysal-\u003egwr) (1.26.15)\n","Requirement already satisfied: certifi\u003e=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests-\u003elibpysal-\u003egwr) (2022.12.7)\n","Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.10/dist-packages (from requests-\u003elibpysal-\u003egwr) (2.0.12)\n","Requirement already satisfied: idna\u003c4,\u003e=2.5 in /usr/local/lib/python3.10/dist-packages (from requests-\u003elibpysal-\u003egwr) (3.4)\n","Collecting deprecation (from segregation\u003e=2.3.1-\u003epysal-\u003egwr)\n","  Downloading deprecation-2.1.0-py2.py3-none-any.whl (11 kB)\n","Requirement already satisfied: joblib in /usr/local/lib/python3.10/dist-packages (from segregation\u003e=2.3.1-\u003epysal-\u003egwr) (1.2.0)\n","Requirement already satisfied: seaborn in /usr/local/lib/python3.10/dist-packages (from segregation\u003e=2.3.1-\u003epysal-\u003egwr) (0.12.2)\n","Requirement already satisfied: numba in /usr/local/lib/python3.10/dist-packages (from segregation\u003e=2.3.1-\u003epysal-\u003egwr) (0.56.4)\n","Requirement already satisfied: pyproj\u003e=3 in /usr/local/lib/python3.10/dist-packages (from segregation\u003e=2.3.1-\u003epysal-\u003egwr) (3.6.0)\n","Collecting rtree (from spaghetti\u003e=1.7.2-\u003epysal-\u003egwr)\n","  Downloading Rtree-1.0.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.0 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.0/1.0 MB\u001b[0m \u001b[31m81.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting pulp (from spopt\u003e=0.5.0-\u003epysal-\u003egwr)\n","  Downloading PuLP-2.7.0-py3-none-any.whl (14.3 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m14.3/14.3 MB\u001b[0m \u001b[31m92.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting rasterio (from tobler\u003e=0.8.2-\u003epysal-\u003egwr)\n","  Downloading rasterio-1.3.7-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (21.3 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m21.3/21.3 MB\u001b[0m \u001b[31m88.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: statsmodels in /usr/local/lib/python3.10/dist-packages (from tobler\u003e=0.8.2-\u003epysal-\u003egwr) (0.13.5)\n","Collecting rasterstats (from tobler\u003e=0.8.2-\u003epysal-\u003egwr)\n","  Downloading rasterstats-0.19.0-py3-none-any.whl (16 kB)\n","Requirement already satisfied: soupsieve\u003e1.2 in /usr/local/lib/python3.10/dist-packages (from beautifulsoup4-\u003elibpysal-\u003egwr) (2.4.1)\n","Requirement already satisfied: MarkupSafe\u003e=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2-\u003elibpysal-\u003egwr) (2.1.2)\n","Requirement already satisfied: fiona\u003e=1.8.19 in /usr/local/lib/python3.10/dist-packages (from geopandas-\u003eaccess\u003e=1.1.8-\u003epysal-\u003egwr) (1.9.4.post1)\n","Requirement already satisfied: six\u003e=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil\u003e=2.8.1-\u003epandas-\u003elibpysal-\u003egwr) (1.16.0)\n","Requirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from quantecon\u003e=0.4.7-\u003egiddy\u003e=2.3.3-\u003epysal-\u003egwr) (1.11.1)\n","Requirement already satisfied: llvmlite\u003c0.40,\u003e=0.39.0dev0 in /usr/local/lib/python3.10/dist-packages (from numba-\u003esegregation\u003e=2.3.1-\u003epysal-\u003egwr) (0.39.1)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from numba-\u003esegregation\u003e=2.3.1-\u003epysal-\u003egwr) (67.7.2)\n","Requirement already satisfied: threadpoolctl\u003e=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn-\u003eesda\u003e=2.4.1-\u003epysal-\u003egwr) (3.1.0)\n","Requirement already satisfied: contourpy\u003e=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib-\u003epointpats\u003e=2.2.0-\u003epysal-\u003egwr) (1.0.7)\n","Requirement already satisfied: cycler\u003e=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib-\u003epointpats\u003e=2.2.0-\u003epysal-\u003egwr) (0.11.0)\n","Requirement already satisfied: fonttools\u003e=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib-\u003epointpats\u003e=2.2.0-\u003epysal-\u003egwr) (4.39.3)\n","Requirement already satisfied: kiwisolver\u003e=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib-\u003epointpats\u003e=2.2.0-\u003epysal-\u003egwr) (1.4.4)\n","Requirement already satisfied: pillow\u003e=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib-\u003epointpats\u003e=2.2.0-\u003epysal-\u003egwr) (8.4.0)\n","Requirement already satisfied: pyparsing\u003e=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib-\u003epointpats\u003e=2.2.0-\u003epysal-\u003egwr) (3.0.9)\n","Collecting affine (from rasterio-\u003etobler\u003e=0.8.2-\u003epysal-\u003egwr)\n","  Downloading affine-2.4.0-py3-none-any.whl (15 kB)\n","Requirement already satisfied: attrs in /usr/local/lib/python3.10/dist-packages (from rasterio-\u003etobler\u003e=0.8.2-\u003epysal-\u003egwr) (23.1.0)\n","Requirement already satisfied: click\u003e=4.0 in /usr/local/lib/python3.10/dist-packages (from rasterio-\u003etobler\u003e=0.8.2-\u003epysal-\u003egwr) (8.1.3)\n","Requirement already satisfied: cligj\u003e=0.5 in /usr/local/lib/python3.10/dist-packages (from rasterio-\u003etobler\u003e=0.8.2-\u003epysal-\u003egwr) (0.7.2)\n","Collecting snuggs\u003e=1.4.1 (from rasterio-\u003etobler\u003e=0.8.2-\u003epysal-\u003egwr)\n","  Downloading snuggs-1.4.7-py3-none-any.whl (5.4 kB)\n","Requirement already satisfied: click-plugins in /usr/local/lib/python3.10/dist-packages (from rasterio-\u003etobler\u003e=0.8.2-\u003epysal-\u003egwr) (1.1.1)\n","Collecting simplejson (from rasterstats-\u003etobler\u003e=0.8.2-\u003epysal-\u003egwr)\n","  Downloading simplejson-3.19.1-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (137 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m137.9/137.9 kB\u001b[0m \u001b[31m15.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: patsy\u003e=0.5.2 in /usr/local/lib/python3.10/dist-packages (from statsmodels-\u003etobler\u003e=0.8.2-\u003epysal-\u003egwr) (0.5.3)\n","Requirement already satisfied: mpmath\u003e=0.19 in /usr/local/lib/python3.10/dist-packages (from sympy-\u003equantecon\u003e=0.4.7-\u003egiddy\u003e=2.3.3-\u003epysal-\u003egwr) (1.3.0)\n","Building wheels for collected packages: gwr, esda, inequality, spint, spvcm\n","  Building wheel for gwr (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for gwr: filename=gwr-1.0.1-py3-none-any.whl size=16934 sha256=01ebc3d8b013f1a73329797a63a332bfcbf85d3bfd4f9a6708c63a913f05d61e\n","  Stored in directory: /root/.cache/pip/wheels/c2/2c/e3/ac0405348e961bd6c29fb47b60460316f30870d961f83081c4\n","  Building wheel for esda (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for esda: filename=esda-2.4.3-py3-none-any.whl size=122765 sha256=87ee2014eda3b3ff3147f3956acc8c7f3f05c555c6ae5116ad3cf7fd4e9606a4\n","  Stored in directory: /root/.cache/pip/wheels/ed/88/61/8705bb427b9aeb4ded8f07eb8ea3e8cada26881368c75619cb\n","  Building wheel for inequality (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for inequality: filename=inequality-1.0.0-py3-none-any.whl size=11781 sha256=d83995fa8dd3bccd0bfb9ac2c9acb315a1ee594f67ff9de28a284ee210c9cad0\n","  Stored in directory: /root/.cache/pip/wheels/52/f7/af/eb988b28568f650a2329b2b3e954019a1c3ceb084dae385b51\n","  Building wheel for spint (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for spint: filename=spint-1.0.7-py3-none-any.whl size=31365 sha256=768b856d926a086b78ff34e1ec92e05b0f6e6ece96688b597bc8a695c1f5cf48\n","  Stored in directory: /root/.cache/pip/wheels/f6/1d/ab/81b0c9d17a778a97ec078147cb11901afdab420c4894dcfbc5\n","  Building wheel for spvcm (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for spvcm: filename=spvcm-0.3.0-py3-none-any.whl size=5777186 sha256=5ae1c42ac0c4377d473baf7dcf64958a05948ba7c3ae9f26f8113b91763f46af\n","  Stored in directory: /root/.cache/pip/wheels/1c/58/6f/debcb62c0a142a6615a65f23217209b543b478d309edfa4e2b\n","Successfully built gwr esda inequality spint spvcm\n","Installing collected packages: pulp, snuggs, simplejson, rtree, deprecation, affine, rasterio, quantecon, inequality, rasterstats, mapclassify, tobler, segregation, pointpats, momepy, esda, access, spvcm, spaghetti, giddy, spopt, splot, spint, pysal, gwr\n","Successfully installed access-1.1.9 affine-2.4.0 deprecation-2.1.0 esda-2.4.3 giddy-2.3.4 gwr-1.0.1 inequality-1.0.0 mapclassify-2.5.0 momepy-0.6.0 pointpats-2.3.0 pulp-2.7.0 pysal-23.1 quantecon-0.7.1 rasterio-1.3.7 rasterstats-0.19.0 rtree-1.0.1 segregation-2.4.2 simplejson-3.19.1 snuggs-1.4.7 spaghetti-1.7.3 spint-1.0.7 splot-1.1.5.post1 spopt-0.5.0 spvcm-0.3.0 tobler-0.10\n"]}],"source":["pip install gwr"]},{"cell_type":"code","execution_count":48,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4289,"status":"ok","timestamp":1687046276741,"user":{"displayName":"Anggy Swary","userId":"00218416286107057042"},"user_tz":-480},"id":"sHSSlWKbtf8L","outputId":"d2213765-1a68-4dc2-d53d-4754972ed0fb"},"outputs":[{"name":"stdout","output_type":"stream","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive',force_remount=True)"]},{"cell_type":"code","execution_count":49,"metadata":{"executionInfo":{"elapsed":360,"status":"ok","timestamp":1687046283197,"user":{"displayName":"Anggy Swary","userId":"00218416286107057042"},"user_tz":-480},"id":"WuYq8mw9u6bP"},"outputs":[],"source":["data1=pd.read_csv('/content/drive/MyDrive/Colab Notebooks/File/landslides.csv')"]},{"cell_type":"code","execution_count":50,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":387,"status":"ok","timestamp":1687046287524,"user":{"displayName":"Anggy Swary","userId":"00218416286107057042"},"user_tz":-480},"id":"jzxHsbgIvAWC","outputId":"8045446a-4ee9-4421-eaa4-95bdc4301b23"},"outputs":[{"data":{"text/html":["\n","  \u003cdiv id=\"df-40111f19-d6cc-4017-85d6-5a544b00a9c4\"\u003e\n","    \u003cdiv class=\"colab-df-container\"\u003e\n","      \u003cdiv\u003e\n","\u003cstyle scoped\u003e\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","\u003c/style\u003e\n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: right;\"\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","      \u003cth\u003eUserID\u003c/th\u003e\n","      \u003cth\u003eX\u003c/th\u003e\n","      \u003cth\u003eY\u003c/th\u003e\n","      \u003cth\u003eElev\u003c/th\u003e\n","      \u003cth\u003eSlope\u003c/th\u003e\n","      \u003cth\u003eSinAspct\u003c/th\u003e\n","      \u003cth\u003eCosAspct\u003c/th\u003e\n","      \u003cth\u003eAbsSouth\u003c/th\u003e\n","      \u003cth\u003eLandslid\u003c/th\u003e\n","      \u003cth\u003eDistStrm\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e0\u003c/th\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e616168.5625\u003c/td\u003e\n","      \u003ctd\u003e5201076.5\u003c/td\u003e\n","      \u003ctd\u003e1450.475\u003c/td\u003e\n","      \u003ctd\u003e27.44172\u003c/td\u003e\n","      \u003ctd\u003e0.409126\u003c/td\u003e\n","      \u003ctd\u003e-0.912478\u003c/td\u003e\n","      \u003ctd\u003e24.1499\u003c/td\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e8.506\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e1\u003c/th\u003e\n","      \u003ctd\u003e2\u003c/td\u003e\n","      \u003ctd\u003e624923.8125\u003c/td\u003e\n","      \u003ctd\u003e5201008.5\u003c/td\u003e\n","      \u003ctd\u003e1567.476\u003c/td\u003e\n","      \u003ctd\u003e21.88343\u003c/td\u003e\n","      \u003ctd\u003e-0.919245\u003c/td\u003e\n","      \u003ctd\u003e-0.393685\u003c/td\u003e\n","      \u003ctd\u003e66.8160\u003c/td\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e15.561\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e2\u003c/th\u003e\n","      \u003ctd\u003e3\u003c/td\u003e\n","      \u003ctd\u003e615672.0000\u003c/td\u003e\n","      \u003ctd\u003e5199187.5\u003c/td\u003e\n","      \u003ctd\u003e1515.065\u003c/td\u003e\n","      \u003ctd\u003e38.81030\u003c/td\u003e\n","      \u003ctd\u003e-0.535024\u003c/td\u003e\n","      \u003ctd\u003e-0.844837\u003c/td\u003e\n","      \u003ctd\u003e32.3455\u003c/td\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e41.238\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e3\u003c/th\u003e\n","      \u003ctd\u003e4\u003c/td\u003e\n","      \u003ctd\u003e615209.3125\u003c/td\u003e\n","      \u003ctd\u003e5199112.0\u003c/td\u003e\n","      \u003ctd\u003e1459.827\u003c/td\u003e\n","      \u003ctd\u003e26.71631\u003c/td\u003e\n","      \u003ctd\u003e-0.828548\u003c/td\u003e\n","      \u003ctd\u003e-0.559918\u003c/td\u003e\n","      \u003ctd\u003e55.9499\u003c/td\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e17.539\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e4\u003c/th\u003e\n","      \u003ctd\u003e5\u003c/td\u003e\n","      \u003ctd\u003e616354.6875\u003c/td\u003e\n","      \u003ctd\u003e5198945.5\u003c/td\u003e\n","      \u003ctd\u003e1379.442\u003c/td\u003e\n","      \u003ctd\u003e27.55271\u003c/td\u003e\n","      \u003ctd\u003e-0.872281\u003c/td\u003e\n","      \u003ctd\u003e-0.489005\u003c/td\u003e\n","      \u003ctd\u003e60.7248\u003c/td\u003e\n","      \u003ctd\u003e1\u003c/td\u003e\n","      \u003ctd\u003e35.023\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\n","\u003c/div\u003e\n","      \u003cbutton class=\"colab-df-convert\" onclick=\"convertToInteractive('df-40111f19-d6cc-4017-85d6-5a544b00a9c4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\"\u003e\n","        \n","  \u003csvg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\"\u003e\n","    \u003cpath d=\"M0 0h24v24H0V0z\" fill=\"none\"/\u003e\n","    \u003cpath d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/\u003e\u003cpath d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/\u003e\n","  \u003c/svg\u003e\n","      \u003c/button\u003e\n","      \n","  \u003cstyle\u003e\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  \u003c/style\u003e\n","\n","      \u003cscript\u003e\n","        const buttonEl =\n","          document.querySelector('#df-40111f19-d6cc-4017-85d6-5a544b00a9c4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-40111f19-d6cc-4017-85d6-5a544b00a9c4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '\u003ca target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb\u003edata table notebook\u003c/a\u003e'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      \u003c/script\u003e\n","    \u003c/div\u003e\n","  \u003c/div\u003e\n","  "],"text/plain":["   UserID            X          Y      Elev     Slope  SinAspct  CosAspct  \\\n","0       1  616168.5625  5201076.5  1450.475  27.44172  0.409126 -0.912478   \n","1       2  624923.8125  5201008.5  1567.476  21.88343 -0.919245 -0.393685   \n","2       3  615672.0000  5199187.5  1515.065  38.81030 -0.535024 -0.844837   \n","3       4  615209.3125  5199112.0  1459.827  26.71631 -0.828548 -0.559918   \n","4       5  616354.6875  5198945.5  1379.442  27.55271 -0.872281 -0.489005   \n","\n","   AbsSouth  Landslid  DistStrm  \n","0   24.1499         1     8.506  \n","1   66.8160         1    15.561  \n","2   32.3455         1    41.238  \n","3   55.9499         1    17.539  \n","4   60.7248         1    35.023  "]},"execution_count":50,"metadata":{},"output_type":"execute_result"}],"source":["data1.head()"]},{"cell_type":"code","execution_count":51,"metadata":{"executionInfo":{"elapsed":10,"status":"ok","timestamp":1687046297828,"user":{"displayName":"Anggy Swary","userId":"00218416286107057042"},"user_tz":-480},"id":"VYDfimSbvHJK"},"outputs":[],"source":["data2=gp.read_file('/content/drive/MyDrive/Colab Notebooks/File/quads.shp')"]},{"cell_type":"code","execution_count":52,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":437,"status":"ok","timestamp":1687046300892,"user":{"displayName":"Anggy Swary","userId":"00218416286107057042"},"user_tz":-480},"id":"PGqw3KjfanIO","outputId":"1591d11e-6718-4dc3-ddb1-7d2fdf86ad52"},"outputs":[{"data":{"text/html":["\n","  \u003cdiv id=\"df-4d629a12-55ab-4996-b2d9-ab6938c7a0cb\"\u003e\n","    \u003cdiv class=\"colab-df-container\"\u003e\n","      \u003cdiv\u003e\n","\u003cstyle scoped\u003e\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","\u003c/style\u003e\n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: right;\"\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","      \u003cth\u003eAREA\u003c/th\u003e\n","      \u003cth\u003ePERIMETER\u003c/th\u003e\n","      \u003cth\u003eQUADS_\u003c/th\u003e\n","      \u003cth\u003eQUADS_ID\u003c/th\u003e\n","      \u003cth\u003eQUADNAME\u003c/th\u003e\n","      \u003cth\u003eABBR\u003c/th\u003e\n","      \u003cth\u003eGPS1\u003c/th\u003e\n","      \u003cth\u003eGPS_ID\u003c/th\u003e\n","      \u003cth\u003egeometry\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e0\u003c/th\u003e\n","      \u003ctd\u003e5.053412e+07\u003c/td\u003e\n","      \u003ctd\u003e29517.686965\u003c/td\u003e\n","      \u003ctd\u003e2\u003c/td\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","      \u003ctd\u003eBUZZARD ROOST\u003c/td\u003e\n","      \u003ctd\u003eburo\u003c/td\u003e\n","      \u003ctd\u003e40\u003c/td\u003e\n","      \u003ctd\u003e40\u003c/td\u003e\n","      \u003ctd\u003ePOLYGON ((604781.290 5191972.720, 599300.000 5...\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e1\u003c/th\u003e\n","      \u003ctd\u003e8.783426e+07\u003c/td\u003e\n","      \u003ctd\u003e37494.159123\u003c/td\u003e\n","      \u003ctd\u003e3\u003c/td\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","      \u003ctd\u003eMALLARD PEAK\u003c/td\u003e\n","      \u003ctd\u003emapk\u003c/td\u003e\n","      \u003ctd\u003e41\u003c/td\u003e\n","      \u003ctd\u003e41\u003c/td\u003e\n","      \u003ctd\u003ePOLYGON ((614131.911 5201285.000, 614306.730 5...\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e2\u003c/th\u003e\n","      \u003ctd\u003e8.610712e+07\u003c/td\u003e\n","      \u003ctd\u003e37131.633256\u003c/td\u003e\n","      \u003ctd\u003e4\u003c/td\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","      \u003ctd\u003ePOLE MTN\u003c/td\u003e\n","      \u003ctd\u003epomt\u003c/td\u003e\n","      \u003ctd\u003e42\u003c/td\u003e\n","      \u003ctd\u003e42\u003c/td\u003e\n","      \u003ctd\u003ePOLYGON ((623646.673 5201285.000, 623832.140 5...\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e3\u003c/th\u003e\n","      \u003ctd\u003e8.423562e+07\u003c/td\u003e\n","      \u003ctd\u003e36738.837324\u003c/td\u003e\n","      \u003ctd\u003e5\u003c/td\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","      \u003ctd\u003eBACON PEAK\u003c/td\u003e\n","      \u003ctd\u003ebapk\u003c/td\u003e\n","      \u003ctd\u003e43\u003c/td\u003e\n","      \u003ctd\u003e43\u003c/td\u003e\n","      \u003ctd\u003ePOLYGON ((633162.328 5201285.000, 633357.500 5...\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e4\u003c/th\u003e\n","      \u003ctd\u003e2.885432e+06\u003c/td\u003e\n","      \u003ctd\u003e18143.741801\u003c/td\u003e\n","      \u003ctd\u003e6\u003c/td\u003e\n","      \u003ctd\u003e0\u003c/td\u003e\n","      \u003ctd\u003eCHAMBERLAIN MTN\u003c/td\u003e\n","      \u003ctd\u003echmt\u003c/td\u003e\n","      \u003ctd\u003e44\u003c/td\u003e\n","      \u003ctd\u003e44\u003c/td\u003e\n","      \u003ctd\u003ePOLYGON ((633590.000 5192547.020, 633357.500 5...\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\n","\u003c/div\u003e\n","      \u003cbutton class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4d629a12-55ab-4996-b2d9-ab6938c7a0cb')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\"\u003e\n","        \n","  \u003csvg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\"\u003e\n","    \u003cpath d=\"M0 0h24v24H0V0z\" fill=\"none\"/\u003e\n","    \u003cpath d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/\u003e\u003cpath d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/\u003e\n","  \u003c/svg\u003e\n","      \u003c/button\u003e\n","      \n","  \u003cstyle\u003e\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  \u003c/style\u003e\n","\n","      \u003cscript\u003e\n","        const buttonEl =\n","          document.querySelector('#df-4d629a12-55ab-4996-b2d9-ab6938c7a0cb button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4d629a12-55ab-4996-b2d9-ab6938c7a0cb');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '\u003ca target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb\u003edata table notebook\u003c/a\u003e'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      \u003c/script\u003e\n","    \u003c/div\u003e\n","  \u003c/div\u003e\n","  "],"text/plain":["           AREA     PERIMETER  QUADS_  QUADS_ID         QUADNAME  ABBR GPS1  \\\n","0  5.053412e+07  29517.686965       2         0    BUZZARD ROOST  buro   40   \n","1  8.783426e+07  37494.159123       3         0     MALLARD PEAK  mapk   41   \n","2  8.610712e+07  37131.633256       4         0         POLE MTN  pomt   42   \n","3  8.423562e+07  36738.837324       5         0       BACON PEAK  bapk   43   \n","4  2.885432e+06  18143.741801       6         0  CHAMBERLAIN MTN  chmt   44   \n","\n","   GPS_ID                                           geometry  \n","0      40  POLYGON ((604781.290 5191972.720, 599300.000 5...  \n","1      41  POLYGON ((614131.911 5201285.000, 614306.730 5...  \n","2      42  POLYGON ((623646.673 5201285.000, 623832.140 5...  \n","3      43  POLYGON ((633162.328 5201285.000, 633357.500 5...  \n","4      44  POLYGON ((633590.000 5192547.020, 633357.500 5...  "]},"execution_count":52,"metadata":{},"output_type":"execute_result"}],"source":["data2.head()"]},{"cell_type":"code","execution_count":53,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":748},"executionInfo":{"elapsed":575,"status":"ok","timestamp":1687046309509,"user":{"displayName":"Anggy Swary","userId":"00218416286107057042"},"user_tz":-480},"id":"Rb3pPi5LvMqj","outputId":"2a3457e7-98a1-40bb-e915-2e50354109ab"},"outputs":[{"data":{"text/plain":["\u003cAxes: \u003e"]},"execution_count":53,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"\n","text/plain":["\u003cFigure size 1000x1000 with 1 Axes\u003e"]},"metadata":{},"output_type":"display_data"}],"source":["fig, ax = plt.subplots(figsize=(10,10))\n","data2.plot(ax=ax, **{'edgecolor':'purple', 'facecolor':'white'})\n","data2.centroid.plot(ax=ax, c='black')"]},{"cell_type":"code","execution_count":55,"metadata":{"executionInfo":{"elapsed":372,"status":"ok","timestamp":1687046328371,"user":{"displayName":"Anggy Swary","userId":"00218416286107057042"},"user_tz":-480},"id":"8eA8oIZOvRvy"},"outputs":[],"source":["# Tentukan variabel bebas dan terikatnya\n","g_y= data1['Landslid'].values.reshape((-1,1))\n","g_X= data1[['Elev', 'Slope']].values\n","# Tentukan Latitude dan Longitude\n","u = data1['X']\n","v = data1['Y']\n","g_coords = list(zip(u,v))\n","\n","g_X = (g_X - g_X.mean(axis=0)) / g_X.std(axis=0)\n","\n","g_y = g_y.reshape((-1,1))\n","\n","g_y = (g_y - g_y.mean(axis=0)) / g_y.std(axis=0)"]},{"cell_type":"code","execution_count":56,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":930,"status":"ok","timestamp":1687046331446,"user":{"displayName":"Anggy Swary","userId":"00218416286107057042"},"user_tz":-480},"id":"gEO-i2BmveiO","outputId":"fd1c32e2-f776-435e-f2af-945220ba2117"},"outputs":[{"name":"stdout","output_type":"stream","text":["96.0\n"]}],"source":["# Kalibrate GWR model\n","gwr_selector = Sel_BW(g_coords, g_y, g_X)\n","gwr_bw = gwr_selector.search(bw_min=2)\n","print(gwr_bw)\n","gwr_results = GWR(g_coords, g_y, g_X, gwr_bw).fit()"]},{"cell_type":"code","execution_count":57,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":375,"status":"ok","timestamp":1687046335808,"user":{"displayName":"Anggy Swary","userId":"00218416286107057042"},"user_tz":-480},"id":"_FNvh189vqf7","outputId":"1e32f54b-1358-4624-9a3b-f274a05e51b3"},"outputs":[{"data":{"text/plain":["array([[ 0.19811275, -0.17504834,  0.09145796],\n","       [ 0.23597657, -0.17344213,  0.0617439 ],\n","       [ 0.19173748, -0.15576904,  0.10169045],\n","       [ 0.18293709, -0.16430895,  0.10613757],\n","       [ 0.20429373, -0.13814613,  0.09577177]])"]},"execution_count":57,"metadata":{},"output_type":"execute_result"}],"source":["gwr_results.params[0:5]"]},{"cell_type":"code","execution_count":58,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":399,"status":"ok","timestamp":1687046340185,"user":{"displayName":"Anggy Swary","userId":"00218416286107057042"},"user_tz":-480},"id":"9W5tOp_1vwYb","outputId":"d677ba1d-6602-4a29-8d12-85e6f4a1555a"},"outputs":[{"data":{"text/plain":["array([[0.1070806 ],\n","       [0.08799355],\n","       [0.10164755],\n","       [0.10824563],\n","       [0.09021811],\n","       [0.11683968],\n","       [0.07083936],\n","       [0.07500741],\n","       [0.07567138],\n","       [0.07667804]])"]},"execution_count":58,"metadata":{},"output_type":"execute_result"}],"source":["gwr_results.localR2[0:10]"]},{"cell_type":"code","execution_count":59,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":396,"status":"ok","timestamp":1687046347193,"user":{"displayName":"Anggy Swary","userId":"00218416286107057042"},"user_tz":-480},"id":"8Vv20w3JwPKo","outputId":"12fa987a-4d29-4642-f4aa-7f7e2087b707"},"outputs":[{"name":"stdout","output_type":"stream","text":["===========================================================================\n","Model type                                                         Gaussian\n","Number of observations:                                                 239\n","Number of covariates:                                                     3\n","\n","Global Regression Results\n","---------------------------------------------------------------------------\n","Residual sum of squares:                                            190.641\n","Log-likelihood:                                                    -312.111\n","AIC:                                                                630.221\n","AICc:                                                               632.392\n","BIC:                                                              -1101.805\n","R2:                                                                   0.202\n","Adj. R2:                                                              0.196\n","\n","Variable                              Est.         SE  t(Est/SE)    p-value\n","------------------------------- ---------- ---------- ---------- ----------\n","X0                                  -0.000      0.058     -0.000      1.000\n","X1                                  -0.306      0.058     -5.236      0.000\n","X2                                   0.303      0.058      5.191      0.000\n","\n","Geographically Weighted Regression (GWR) Results\n","---------------------------------------------------------------------------\n","Spatial kernel:                                           Adaptive bisquare\n","Bandwidth used:                                                      96.000\n","\n","Diagnostic information\n","---------------------------------------------------------------------------\n","Residual sum of squares:                                            156.980\n","Effective number of parameters (trace(S)):                           17.311\n","Degree of freedom (n - trace(S)):                                   221.689\n","Sigma estimate:                                                       0.841\n","Log-likelihood:                                                    -288.895\n","AIC:                                                                614.412\n","AICc:                                                               617.631\n","BIC:                                                                678.068\n","R2:                                                                   0.343\n","Adjusted R2:                                                          0.292\n","Adj. alpha (95%):                                                     0.009\n","Adj. critical t value (95%):                                          2.647\n","\n","Summary Statistics For GWR Parameter Estimates\n","---------------------------------------------------------------------------\n","Variable                   Mean        STD        Min     Median        Max\n","-------------------- ---------- ---------- ---------- ---------- ----------\n","X0                        0.048      0.172     -0.345      0.047      0.346\n","X1                       -0.287      0.182     -0.698     -0.275      0.015\n","X2                        0.247      0.156     -0.026      0.236      0.567\n","===========================================================================\n","\n"]}],"source":["gwr_results.summary()"]}],"metadata":{"colab":{"authorship_tag":"ABX9TyMdksV3mDW70ZkBY533iW4W","name":"","version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}